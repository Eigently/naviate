build musl binary:
  image: rust:latest
  stage: build
  tags:
    - rust-build
  needs:
    - unit test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"'
      changes:
        - server/**/*
        - .gitlab-ci.yml
      when: on_success
  before_script:
    - cd server
    - apt-get update && apt-get install musl-dev musl-tools -y
    - rustup target add x86_64-unknown-linux-musl
  script:
    - cargo build --release --target=x86_64-unknown-linux-musl
  artifacts:
    paths:
      - server/target/

build glibc binary:
  image: rust:latest
  stage: build
  needs:
    - unit test
  rules:
  - when: never
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main")' 
    changes:
      - server/**/*
      - .gitlab-ci.yml
    when: on_success
  before_script:
    - cd server
  script:
    - cargo build --release
  artifacts:
    paths:
      - server/target/

build api documentation:
  image: node:latest
  stage: build
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main")' 
    changes:
      - server/**/*
      - .gitlab-ci.yml
    when: on_success
  before_script:
    - cd server
    - mkdir output
  script:
    - npx redoc-cli bundle ./docs/core.yaml -o ./output/index.html
  artifacts:
    paths:
      - server/output/